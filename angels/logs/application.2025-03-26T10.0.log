2025-03-26T10:33:12.478 [HikariPool-1 housekeeper] WARN c.z.h.p.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m54s98ms885Âµs400ns). 
2025-03-26T10:43:53.297 [http-nio-8080-exec-8] ERROR o.t.TemplateEngine - [THYMELEAF][http-nio-8080-exec-8] Exception processing template "xdm/codegroup/CodeGroupXdmForm": An error happened during template parsing (template: "class path resource [templates/xdm/codegroup/CodeGroupXdmForm.html]") 
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/xdm/codegroup/CodeGroupXdmForm.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1435)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1105)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.attoparser.ParseException: Error resolving fragment: "~{'xdm/include/modal' :: modal}": template or fragment could not be resolved (template: "xdm/codegroup/CodeGroupXdmForm" - line 126, col 8)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateInputException: Error resolving fragment: "~{'xdm/include/modal' :: modal}": template or fragment could not be resolved (template: "xdm/codegroup/CodeGroupXdmForm" - line 126, col 8)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:598)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:419)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:115)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
2025-03-26T10:43:53.310 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/xdm/codegroup/CodeGroupXdmForm.html]")] with root cause 
org.thymeleaf.exceptions.TemplateInputException: Error resolving fragment: "~{'xdm/include/modal' :: modal}": template or fragment could not be resolved (template: "xdm/codegroup/CodeGroupXdmForm" - line 126, col 8)
	at org.thymeleaf.standard.expression.FragmentExpression.resolveExecutedFragmentExpression(FragmentExpression.java:598)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.computeFragment(AbstractStandardFragmentInsertionTagProcessor.java:419)
	at org.thymeleaf.standard.processor.AbstractStandardFragmentInsertionTagProcessor.doProcess(AbstractStandardFragmentInsertionTagProcessor.java:115)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1435)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1105)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-03-26T10:43:53.356 [http-nio-8080-exec-8] ERROR o.s.b.a.w.s.e.ErrorMvcAutoConfiguration$StaticView - Cannot render error page for request [/codegroup/CodeGroupXdmForm] and exception [An error happened during template parsing (template: "class path resource [templates/xdm/codegroup/CodeGroupXdmForm.html]")] as the response has already been committed. As a result, the response may have the wrong status code. 
2025-03-26T10:47:25.543 [http-nio-8080-exec-4] ERROR j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'',
				'',
				'',
				NOW(),
				0				
			)
 {FAILED after 2 msec} 
java.sql.SQLException: Incorrect integer value: '' for column 'cgOrder' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy65.insert(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy3/jdk.proxy3.$Proxy66.insert(Unknown Source)
	at com.angels.module.codegroup.CodeGroupService.insert(CodeGroupService.java:24)
	at com.angels.module.codegroup.CodeGroupController.codegroupXdmInst(CodeGroupController.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-03-26T10:47:25.550 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.jdbc.UncategorizedSQLException: 
### Error updating database.  Cause: java.sql.SQLException: Incorrect integer value: '' for column 'cgOrder' at row 1
### The error may exist in file [C:\factory\ws_sts4_4270\repo_angels\angels\bin\main\mybatis\mapper\mysql\main\infra\CodeGroupMapper.xml]
### The error may involve com.angels.module.codegroup.CodeGroupDao.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO codegroup (    cgUse,       cgName,       cgNameEng,       cgOrder,       cgRegDate,       cgdelNy           ) values (     ?,     ?,     ?,     ?,     NOW(),     0        )
### Cause: java.sql.SQLException: Incorrect integer value: '' for column 'cgOrder' at row 1
; uncategorized SQLException; SQL state [HY000]; error code [1366]; Incorrect integer value: '' for column 'cgOrder' at row 1] with root cause 
java.sql.SQLException: Incorrect integer value: '' for column 'cgOrder' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy65.insert(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy3/jdk.proxy3.$Proxy66.insert(Unknown Source)
	at com.angels.module.codegroup.CodeGroupService.insert(CodeGroupService.java:24)
	at com.angels.module.codegroup.CodeGroupController.codegroupXdmInst(CodeGroupController.java:50)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-03-26T10:47:32.875 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '16'
 {executed in 4 msec} 
2025-03-26T10:47:32.879 [http-nio-8080-exec-1] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:47:33.825 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 9 msec} 
2025-03-26T10:47:33.827 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:47:33.828 [http-nio-8080-exec-9] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|18               |
|-----------------|
 
2025-03-26T10:47:33.852 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:47:33.852 [http-nio-8080-exec-6] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|16       |
|---------|
 
2025-03-26T10:47:33.855 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 0 msec} 
2025-03-26T10:47:33.862 [http-nio-8080-exec-6] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|13    |0       |1     |22      |12        |0          |1       |2025-03-25T23:42:06 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:47:35.153 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '18'
 {executed in 1 msec} 
2025-03-26T10:47:35.156 [http-nio-8080-exec-8] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:47:36.437 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 6 msec} 
2025-03-26T10:47:36.438 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:47:36.441 [http-nio-8080-exec-6] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|19               |
|-----------------|
 
2025-03-26T10:47:36.452 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:47:36.452 [http-nio-8080-exec-3] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|17       |
|---------|
 
2025-03-26T10:47:36.459 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 5 msec} 
2025-03-26T10:47:36.462 [http-nio-8080-exec-3] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:47:37.910 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '19'
 {executed in 1 msec} 
2025-03-26T10:47:37.911 [http-nio-8080-exec-5] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:47:38.903 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 5 msec} 
2025-03-26T10:47:38.904 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:47:38.907 [http-nio-8080-exec-4] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|20               |
|-----------------|
 
2025-03-26T10:47:38.927 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:47:38.928 [http-nio-8080-exec-2] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|18       |
|---------|
 
2025-03-26T10:47:38.930 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:47:38.933 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:48:22.272 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:48:22.273 [http-nio-8080-exec-9] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|18       |
|---------|
 
2025-03-26T10:48:22.277 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 3 msec} 
2025-03-26T10:48:22.279 [http-nio-8080-exec-9] INFO j.resultsettable - 
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
|14    |0       |1     |55     |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|13    |0       |1     |22     |12        |0          |1       |2025-03-25T23:42:06 |[null]   |
|11    |0       |1     |íì´     |status    |0          |1       |2025-03-25T23:17:10 |[null]   |
|10    |0       |1     |status |status    |2          |1       |2025-03-23T17:08:37 |[null]   |
|9     |0       |1     |ì´ë     |Inning    |40         |1       |2025-03-22T13:33:54 |[null]   |
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:48:23.177 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:48:23.177 [http-nio-8080-exec-7] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|18       |
|---------|
 
2025-03-26T10:48:23.179 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:48:23.180 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:48:38.058 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '20'
 {executed in 2 msec} 
2025-03-26T10:48:38.059 [http-nio-8080-exec-6] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:48:39.542 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 5 msec} 
2025-03-26T10:48:39.545 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT last_insert_id()
 {executed in 2 msec} 
2025-03-26T10:48:39.545 [http-nio-8080-exec-1] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|21               |
|-----------------|
 
2025-03-26T10:48:39.556 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 2 msec} 
2025-03-26T10:48:39.557 [http-nio-8080-exec-2] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|19       |
|---------|
 
2025-03-26T10:48:39.560 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:48:39.562 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:49:19.018 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:49:19.018 [http-nio-8080-exec-8] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|19       |
|---------|
 
2025-03-26T10:49:19.023 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 2 msec} 
2025-03-26T10:49:19.025 [http-nio-8080-exec-8] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:49:20.031 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '21'
 {executed in 1 msec} 
2025-03-26T10:49:20.032 [http-nio-8080-exec-9] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:49:22.863 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 5 msec} 
2025-03-26T10:49:22.866 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT last_insert_id()
 {executed in 2 msec} 
2025-03-26T10:49:22.867 [http-nio-8080-exec-5] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|22               |
|-----------------|
 
2025-03-26T10:49:22.881 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:49:22.882 [http-nio-8080-exec-10] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|20       |
|---------|
 
2025-03-26T10:49:22.885 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:49:22.887 [http-nio-8080-exec-10] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:50:19.543 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:50:19.544 [http-nio-8080-exec-7] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|20       |
|---------|
 
2025-03-26T10:50:19.548 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:50:19.549 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:50:19.679 [File Watcher] INFO o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) 
2025-03-26T10:50:19.698 [Thread-5] INFO o.s.b.w.e.t.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete 
2025-03-26T10:50:19.702 [tomcat-shutdown] INFO o.a.c.h.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:50:19.724 [tomcat-shutdown] INFO o.s.b.w.e.t.GracefulShutdown - Graceful shutdown complete 
2025-03-26T10:50:19.725 [Thread-5] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:50:19.739 [Thread-5] INFO c.z.h.HikariDataSource - HikariPool-1 - Shutdown initiated... 
2025-03-26T10:50:19.756 [Thread-5] INFO c.z.h.HikariDataSource - HikariPool-1 - Shutdown completed. 
2025-03-26T10:50:19.943 [restartedMain] INFO c.a.AngelsApplication - Starting AngelsApplication using Java 21.0.5 with PID 6884 (C:\factory\ws_sts4_4270\repo_angels\angels\bin\main started by sunjs in C:\factory\ws_sts4_4270\repo_angels\angels) 
2025-03-26T10:50:19.945 [restartedMain] INFO c.a.AngelsApplication - No active profile set, falling back to 1 default profile: "default" 
2025-03-26T10:50:20.403 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2025-03-26T10:50:20.406 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:50:20.406 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2025-03-26T10:50:20.406 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36] 
2025-03-26T10:50:20.432 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2025-03-26T10:50:20.432 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 483 ms 
2025-03-26T10:50:20.529 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-2 - Starting... 
2025-03-26T10:50:20.555 [restartedMain] INFO c.z.h.p.HikariPool - HikariPool-2 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@9b27ab 
2025-03-26T10:50:20.555 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-2 - Start completed. 
2025-03-26T10:50:20.557 [restartedMain] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT 
			cdSeq,
			cdName,
			codeGroup_cgSeq
		FROM
			code
		WHERE 1=1
			AND cdDelNy = 0
 {executed in 1 msec} 
2025-03-26T10:50:20.562 [restartedMain] INFO j.resultsettable - 
|------|----------|----------------|
|cdseq |cdname    |codegroup_cgseq |
|------|----------|----------------|
|1     |SKT       |1               |
|2     |KT        |1               |
|3     |LG U+     |1               |
|4     |SKT ìë°í°   |1               |
|5     |KT ìë°í°    |1               |
|6     |LG U+ ìë°í° |1               |
|7     |ë¨ì        |2               |
|8     |ì¬ì        |2               |
|9     |AL        |3               |
|10    |NL        |3               |
|11    |East      |4               |
|12    |Central   |4               |
|13    |West      |4               |
|14    |í¬ì        |5               |
|15    |1ë£¨ì       |5               |
|16    |2ë£¨ì       |5               |
|17    |3ë£¨ì       |5               |
|18    |ì ê²©ì       |5               |
|19    |ì¢ìµì       |5               |
|20    |ì¤ê²¬ì       |5               |
|21    |ì°ìµì       |5               |
|22    |í¬ì        |5               |
|23    |ì§ëªíì      |5               |
|24    |ëí        |5               |
|25    |ëì£¼ì       |5               |
|26    |ì¢í¬        |6               |
|27    |ì°í¬        |6               |
|28    |ìí¬        |6               |
|29    |ì¢í        |7               |
|30    |ì°í        |7               |
|31    |ìí        |7               |
|32    |ë¯¸êµ­        |8               |
|33    |ëë¯¸ëì¹´ ê³µíêµ­  |8               |
|34    |ë² ë¤ììë¼     |8               |
|35    |ì¿ ë°        |8               |
|36    |í¸ìë¥´í ë¦¬ì½    |8               |
|37    |ë©ìì½       |8               |
|38    |ìºëë¤       |8               |
|39    |ì¼ë³¸        |8               |
|40    |ì½ë¡¬ë¹ì      |8               |
|41    |ëíë¯¼êµ­      |8               |
|42    |íëë§       |8               |
|43    |í´ë¼ì       |8               |
|44    |ë¤ëëë      |8               |
|45    |ë°íë§       |8               |
|46    |ëì¹´ë¼ê³¼      |8               |
|47    |í¸ì£¼        |8               |
|48    |ë¸ë¼ì§       |8               |
|49    |ëì¼        |8               |
|50    |ì¨ëë¼ì¤      |8               |
|51    |ëë§        |8               |
|52    |ìë£¨ë°       |8               |
|53    |1íì´       |9               |
|54    |1íë§       |9               |
|55    |2íì´       |9               |
|56    |2íë§       |9               |
|57    |3íì´       |9               |
|58    |3íë§       |9               |
|59    |4íì´       |9               |
|60    |4íë§       |9               |
|61    |5íì´       |9               |
|62    |5íë§       |9               |
|63    |6íì´       |9               |
|64    |6íë§       |9               |
|65    |7íì´       |9               |
|66    |7íë§       |9               |
|67    |8íì´       |9               |
|68    |8íë§       |9               |
|69    |9íì´       |9               |
|70    |9íë§       |9               |
|71    |10íì´      |9               |
|72    |10íë§      |9               |
|73    |11íì´      |9               |
|74    |11íë§      |9               |
|75    |12íì´      |9               |
|76    |12íë§      |9               |
|77    |13íì´      |9               |
|78    |13íë§      |9               |
|79    |14íì´      |9               |
|80    |14íë§      |9               |
|81    |15íì´      |9               |
|82    |15íë§      |9               |
|83    |16íì´      |9               |
|84    |16íë§      |9               |
|85    |17íì´      |9               |
|86    |17íë§      |9               |
|87    |18íì´      |9               |
|88    |18íë§      |9               |
|89    |19íì´      |9               |
|90    |19íë§      |9               |
|91    |20íì´      |9               |
|92    |20íë§      |9               |
|93    |íì­        |10              |
|94    |ìí´        |10              |
|95    |í¬íê²¸ì      |5               |
|------|----------|----------------|
 
2025-03-26T10:50:20.729 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2025-03-26T10:50:20.739 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:50:20.744 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2025-03-26T10:50:20.749 [restartedMain] INFO c.a.AngelsApplication - Started AngelsApplication in 0.884 seconds (process running for 5084.802) 
2025-03-26T10:50:20.752 [restartedMain] INFO o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged 
2025-03-26T10:50:20.826 [http-nio-8080-exec-1] INFO o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2025-03-26T10:50:20.826 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2025-03-26T10:50:20.828 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Completed initialization in 2 ms 
2025-03-26T10:52:50.700 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '22'
 {executed in 2 msec} 
2025-03-26T10:52:50.702 [http-nio-8080-exec-4] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:52:51.942 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 8 msec} 
2025-03-26T10:52:51.943 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:52:51.944 [http-nio-8080-exec-2] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|23               |
|-----------------|
 
2025-03-26T10:52:51.958 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:52:51.959 [http-nio-8080-exec-3] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|21       |
|---------|
 
2025-03-26T10:52:51.964 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:52:51.965 [http-nio-8080-exec-3] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:54:05.570 [File Watcher] INFO o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) 
2025-03-26T10:54:05.571 [Thread-7] INFO o.s.b.w.e.t.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete 
2025-03-26T10:54:05.572 [tomcat-shutdown] INFO o.a.c.h.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:05.589 [tomcat-shutdown] INFO o.s.b.w.e.t.GracefulShutdown - Graceful shutdown complete 
2025-03-26T10:54:05.589 [Thread-7] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:05.591 [Thread-7] INFO c.z.h.HikariDataSource - HikariPool-2 - Shutdown initiated... 
2025-03-26T10:54:05.595 [Thread-7] INFO c.z.h.HikariDataSource - HikariPool-2 - Shutdown completed. 
2025-03-26T10:54:05.690 [restartedMain] INFO c.a.AngelsApplication - Starting AngelsApplication using Java 21.0.5 with PID 6884 (C:\factory\ws_sts4_4270\repo_angels\angels\bin\main started by sunjs in C:\factory\ws_sts4_4270\repo_angels\angels) 
2025-03-26T10:54:05.690 [restartedMain] INFO c.a.AngelsApplication - No active profile set, falling back to 1 default profile: "default" 
2025-03-26T10:54:06.005 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2025-03-26T10:54:06.007 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:06.007 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2025-03-26T10:54:06.007 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36] 
2025-03-26T10:54:06.027 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2025-03-26T10:54:06.027 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 334 ms 
2025-03-26T10:54:06.121 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-3 - Starting... 
2025-03-26T10:54:06.139 [restartedMain] INFO c.z.h.p.HikariPool - HikariPool-3 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3b8ba13a 
2025-03-26T10:54:06.139 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-3 - Start completed. 
2025-03-26T10:54:06.142 [restartedMain] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT 
			cdSeq,
			cdName,
			codeGroup_cgSeq
		FROM
			code
		WHERE 1=1
			AND cdDelNy = 0
 {executed in 1 msec} 
2025-03-26T10:54:06.147 [restartedMain] INFO j.resultsettable - 
|------|----------|----------------|
|cdseq |cdname    |codegroup_cgseq |
|------|----------|----------------|
|1     |SKT       |1               |
|2     |KT        |1               |
|3     |LG U+     |1               |
|4     |SKT ìë°í°   |1               |
|5     |KT ìë°í°    |1               |
|6     |LG U+ ìë°í° |1               |
|7     |ë¨ì        |2               |
|8     |ì¬ì        |2               |
|9     |AL        |3               |
|10    |NL        |3               |
|11    |East      |4               |
|12    |Central   |4               |
|13    |West      |4               |
|14    |í¬ì        |5               |
|15    |1ë£¨ì       |5               |
|16    |2ë£¨ì       |5               |
|17    |3ë£¨ì       |5               |
|18    |ì ê²©ì       |5               |
|19    |ì¢ìµì       |5               |
|20    |ì¤ê²¬ì       |5               |
|21    |ì°ìµì       |5               |
|22    |í¬ì        |5               |
|23    |ì§ëªíì      |5               |
|24    |ëí        |5               |
|25    |ëì£¼ì       |5               |
|26    |ì¢í¬        |6               |
|27    |ì°í¬        |6               |
|28    |ìí¬        |6               |
|29    |ì¢í        |7               |
|30    |ì°í        |7               |
|31    |ìí        |7               |
|32    |ë¯¸êµ­        |8               |
|33    |ëë¯¸ëì¹´ ê³µíêµ­  |8               |
|34    |ë² ë¤ììë¼     |8               |
|35    |ì¿ ë°        |8               |
|36    |í¸ìë¥´í ë¦¬ì½    |8               |
|37    |ë©ìì½       |8               |
|38    |ìºëë¤       |8               |
|39    |ì¼ë³¸        |8               |
|40    |ì½ë¡¬ë¹ì      |8               |
|41    |ëíë¯¼êµ­      |8               |
|42    |íëë§       |8               |
|43    |í´ë¼ì       |8               |
|44    |ë¤ëëë      |8               |
|45    |ë°íë§       |8               |
|46    |ëì¹´ë¼ê³¼      |8               |
|47    |í¸ì£¼        |8               |
|48    |ë¸ë¼ì§       |8               |
|49    |ëì¼        |8               |
|50    |ì¨ëë¼ì¤      |8               |
|51    |ëë§        |8               |
|52    |ìë£¨ë°       |8               |
|53    |1íì´       |9               |
|54    |1íë§       |9               |
|55    |2íì´       |9               |
|56    |2íë§       |9               |
|57    |3íì´       |9               |
|58    |3íë§       |9               |
|59    |4íì´       |9               |
|60    |4íë§       |9               |
|61    |5íì´       |9               |
|62    |5íë§       |9               |
|63    |6íì´       |9               |
|64    |6íë§       |9               |
|65    |7íì´       |9               |
|66    |7íë§       |9               |
|67    |8íì´       |9               |
|68    |8íë§       |9               |
|69    |9íì´       |9               |
|70    |9íë§       |9               |
|71    |10íì´      |9               |
|72    |10íë§      |9               |
|73    |11íì´      |9               |
|74    |11íë§      |9               |
|75    |12íì´      |9               |
|76    |12íë§      |9               |
|77    |13íì´      |9               |
|78    |13íë§      |9               |
|79    |14íì´      |9               |
|80    |14íë§      |9               |
|81    |15íì´      |9               |
|82    |15íë§      |9               |
|83    |16íì´      |9               |
|84    |16íë§      |9               |
|85    |17íì´      |9               |
|86    |17íë§      |9               |
|87    |18íì´      |9               |
|88    |18íë§      |9               |
|89    |19íì´      |9               |
|90    |19íë§      |9               |
|91    |20íì´      |9               |
|92    |20íë§      |9               |
|93    |íì­        |10              |
|94    |ìí´        |10              |
|95    |í¬íê²¸ì      |5               |
|------|----------|----------------|
 
2025-03-26T10:54:06.304 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2025-03-26T10:54:06.314 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:06.319 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2025-03-26T10:54:06.325 [restartedMain] INFO c.a.AngelsApplication - Started AngelsApplication in 0.676 seconds (process running for 5310.378) 
2025-03-26T10:54:06.328 [restartedMain] INFO o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged 
2025-03-26T10:54:24.679 [File Watcher] INFO o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification) 
2025-03-26T10:54:24.680 [Thread-11] INFO o.s.b.w.e.t.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete 
2025-03-26T10:54:24.682 [tomcat-shutdown] INFO o.a.c.h.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:24.698 [tomcat-shutdown] INFO o.s.b.w.e.t.GracefulShutdown - Graceful shutdown complete 
2025-03-26T10:54:24.700 [Thread-11] INFO o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:24.702 [Thread-11] INFO c.z.h.HikariDataSource - HikariPool-3 - Shutdown initiated... 
2025-03-26T10:54:24.706 [Thread-11] INFO c.z.h.HikariDataSource - HikariPool-3 - Shutdown completed. 
2025-03-26T10:54:24.804 [restartedMain] INFO c.a.AngelsApplication - Starting AngelsApplication using Java 21.0.5 with PID 6884 (C:\factory\ws_sts4_4270\repo_angels\angels\bin\main started by sunjs in C:\factory\ws_sts4_4270\repo_angels\angels) 
2025-03-26T10:54:24.804 [restartedMain] INFO c.a.AngelsApplication - No active profile set, falling back to 1 default profile: "default" 
2025-03-26T10:54:25.082 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port 8080 (http) 
2025-03-26T10:54:25.083 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:25.083 [restartedMain] INFO o.a.c.c.StandardService - Starting service [Tomcat] 
2025-03-26T10:54:25.083 [restartedMain] INFO o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36] 
2025-03-26T10:54:25.105 [restartedMain] INFO o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext 
2025-03-26T10:54:25.105 [restartedMain] INFO o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 298 ms 
2025-03-26T10:54:25.200 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-4 - Starting... 
2025-03-26T10:54:25.215 [restartedMain] INFO c.z.h.p.HikariPool - HikariPool-4 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@201b0c87 
2025-03-26T10:54:25.216 [restartedMain] INFO c.z.h.HikariDataSource - HikariPool-4 - Start completed. 
2025-03-26T10:54:25.218 [restartedMain] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT 
			cdSeq,
			cdName,
			codeGroup_cgSeq
		FROM
			code
		WHERE 1=1
			AND cdDelNy = 0
 {executed in 1 msec} 
2025-03-26T10:54:25.220 [restartedMain] INFO j.resultsettable - 
|------|----------|----------------|
|cdseq |cdname    |codegroup_cgseq |
|------|----------|----------------|
|1     |SKT       |1               |
|2     |KT        |1               |
|3     |LG U+     |1               |
|4     |SKT ìë°í°   |1               |
|5     |KT ìë°í°    |1               |
|6     |LG U+ ìë°í° |1               |
|7     |ë¨ì        |2               |
|8     |ì¬ì        |2               |
|9     |AL        |3               |
|10    |NL        |3               |
|11    |East      |4               |
|12    |Central   |4               |
|13    |West      |4               |
|14    |í¬ì        |5               |
|15    |1ë£¨ì       |5               |
|16    |2ë£¨ì       |5               |
|17    |3ë£¨ì       |5               |
|18    |ì ê²©ì       |5               |
|19    |ì¢ìµì       |5               |
|20    |ì¤ê²¬ì       |5               |
|21    |ì°ìµì       |5               |
|22    |í¬ì        |5               |
|23    |ì§ëªíì      |5               |
|24    |ëí        |5               |
|25    |ëì£¼ì       |5               |
|26    |ì¢í¬        |6               |
|27    |ì°í¬        |6               |
|28    |ìí¬        |6               |
|29    |ì¢í        |7               |
|30    |ì°í        |7               |
|31    |ìí        |7               |
|32    |ë¯¸êµ­        |8               |
|33    |ëë¯¸ëì¹´ ê³µíêµ­  |8               |
|34    |ë² ë¤ììë¼     |8               |
|35    |ì¿ ë°        |8               |
|36    |í¸ìë¥´í ë¦¬ì½    |8               |
|37    |ë©ìì½       |8               |
|38    |ìºëë¤       |8               |
|39    |ì¼ë³¸        |8               |
|40    |ì½ë¡¬ë¹ì      |8               |
|41    |ëíë¯¼êµ­      |8               |
|42    |íëë§       |8               |
|43    |í´ë¼ì       |8               |
|44    |ë¤ëëë      |8               |
|45    |ë°íë§       |8               |
|46    |ëì¹´ë¼ê³¼      |8               |
|47    |í¸ì£¼        |8               |
|48    |ë¸ë¼ì§       |8               |
|49    |ëì¼        |8               |
|50    |ì¨ëë¼ì¤      |8               |
|51    |ëë§        |8               |
|52    |ìë£¨ë°       |8               |
|53    |1íì´       |9               |
|54    |1íë§       |9               |
|55    |2íì´       |9               |
|56    |2íë§       |9               |
|57    |3íì´       |9               |
|58    |3íë§       |9               |
|59    |4íì´       |9               |
|60    |4íë§       |9               |
|61    |5íì´       |9               |
|62    |5íë§       |9               |
|63    |6íì´       |9               |
|64    |6íë§       |9               |
|65    |7íì´       |9               |
|66    |7íë§       |9               |
|67    |8íì´       |9               |
|68    |8íë§       |9               |
|69    |9íì´       |9               |
|70    |9íë§       |9               |
|71    |10íì´      |9               |
|72    |10íë§      |9               |
|73    |11íì´      |9               |
|74    |11íë§      |9               |
|75    |12íì´      |9               |
|76    |12íë§      |9               |
|77    |13íì´      |9               |
|78    |13íë§      |9               |
|79    |14íì´      |9               |
|80    |14íë§      |9               |
|81    |15íì´      |9               |
|82    |15íë§      |9               |
|83    |16íì´      |9               |
|84    |16íë§      |9               |
|85    |17íì´      |9               |
|86    |17íë§      |9               |
|87    |18íì´      |9               |
|88    |18íë§      |9               |
|89    |19íì´      |9               |
|90    |19íë§      |9               |
|91    |20íì´      |9               |
|92    |20íë§      |9               |
|93    |íì­        |10              |
|94    |ìí´        |10              |
|95    |í¬íê²¸ì      |5               |
|------|----------|----------------|
 
2025-03-26T10:54:25.333 [restartedMain] INFO o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729 
2025-03-26T10:54:25.341 [restartedMain] INFO o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
2025-03-26T10:54:25.347 [restartedMain] INFO o.s.b.w.e.t.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
2025-03-26T10:54:25.352 [restartedMain] INFO c.a.AngelsApplication - Started AngelsApplication in 0.592 seconds (process running for 5329.406) 
2025-03-26T10:54:25.354 [restartedMain] INFO o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged 
2025-03-26T10:54:27.524 [http-nio-8080-exec-1] INFO o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
2025-03-26T10:54:27.524 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
2025-03-26T10:54:27.525 [http-nio-8080-exec-1] INFO o.s.w.s.DispatcherServlet - Completed initialization in 1 ms 
2025-03-26T10:54:27.535 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:54:27.536 [http-nio-8080-exec-1] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|21       |
|---------|
 
2025-03-26T10:54:27.541 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 2 msec} 
2025-03-26T10:54:27.542 [http-nio-8080-exec-1] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:54:31.370 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '23'
 {executed in 1 msec} 
2025-03-26T10:54:31.371 [http-nio-8080-exec-10] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:54:34.860 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 10 msec} 
2025-03-26T10:54:34.861 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 0 msec} 
2025-03-26T10:54:34.862 [http-nio-8080-exec-8] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|24               |
|-----------------|
 
2025-03-26T10:54:34.871 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:54:34.871 [http-nio-8080-exec-9] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:54:34.874 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 2 msec} 
2025-03-26T10:54:34.877 [http-nio-8080-exec-9] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:54:59.598 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:54:59.598 [http-nio-8080-exec-1] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:54:59.600 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 1 msec} 
2025-03-26T10:54:59.602 [http-nio-8080-exec-1] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:00.050 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 2 msec} 
2025-03-26T10:55:00.051 [http-nio-8080-exec-2] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:00.054 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 10
 {executed in 1 msec} 
2025-03-26T10:55:00.055 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng   |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|13    |0       |1     |22     |12          |0          |1       |2025-03-25T23:42:06 |[null]   |
|11    |0       |1     |íì´     |status      |0          |1       |2025-03-25T23:17:10 |[null]   |
|10    |0       |1     |status |status      |2          |1       |2025-03-23T17:08:37 |[null]   |
|9     |0       |1     |ì´ë     |Inning      |40         |1       |2025-03-22T13:33:54 |[null]   |
|8     |0       |1     |êµ­ì      |Nationality |21         |1       |2025-03-22T10:51:18 |[null]   |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:04.551 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:55:04.551 [http-nio-8080-exec-6] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:04.554 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:55:04.555 [http-nio-8080-exec-6] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:05.169 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:55:05.169 [http-nio-8080-exec-3] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:05.174 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 2 msec} 
2025-03-26T10:55:05.175 [http-nio-8080-exec-3] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:06.081 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:06.081 [http-nio-8080-exec-8] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:06.085 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 10
 {executed in 3 msec} 
2025-03-26T10:55:06.086 [http-nio-8080-exec-8] INFO j.resultsettable - 
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng   |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|13    |0       |1     |22     |12          |0          |1       |2025-03-25T23:42:06 |[null]   |
|11    |0       |1     |íì´     |status      |0          |1       |2025-03-25T23:17:10 |[null]   |
|10    |0       |1     |status |status      |2          |1       |2025-03-23T17:08:37 |[null]   |
|9     |0       |1     |ì´ë     |Inning      |40         |1       |2025-03-22T13:33:54 |[null]   |
|8     |0       |1     |êµ­ì      |Nationality |21         |1       |2025-03-22T10:51:18 |[null]   |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:07.104 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:55:07.105 [http-nio-8080-exec-7] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:07.108 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 10
 {executed in 2 msec} 
2025-03-26T10:55:07.109 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng   |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|13    |0       |1     |22     |12          |0          |1       |2025-03-25T23:42:06 |[null]   |
|11    |0       |1     |íì´     |status      |0          |1       |2025-03-25T23:17:10 |[null]   |
|10    |0       |1     |status |status      |2          |1       |2025-03-23T17:08:37 |[null]   |
|9     |0       |1     |ì´ë     |Inning      |40         |1       |2025-03-22T13:33:54 |[null]   |
|8     |0       |1     |êµ­ì      |Nationality |21         |1       |2025-03-22T10:51:18 |[null]   |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:07.451 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:07.452 [http-nio-8080-exec-9] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:07.457 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 15
 {executed in 3 msec} 
2025-03-26T10:55:07.460 [http-nio-8080-exec-9] INFO j.resultsettable - 
|------|--------|------|-------|-----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng  |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|-----------|-----------|--------|--------------------|---------|
|7     |0       |1     |í      |Bat        |3          |1       |2025-03-21T17:26:47 |[null]   |
|6     |0       |1     |í¬      |Throw      |3          |1       |2025-03-21T17:26:35 |[null]   |
|5     |0       |1     |í¬ì§ì    |Position   |13         |1       |2025-03-21T17:24:04 |[null]   |
|4     |0       |1     |ë¦¬ê·¸ìë¸   |LeagueSub  |3          |1       |2025-03-20T16:46:16 |[null]   |
|3     |0       |1     |ë¦¬ê·¸ë©ì¸   |LeagueMain |2          |1       |2025-03-20T16:46:10 |[null]   |
|------|--------|------|-------|-----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:07.781 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:07.781 [http-nio-8080-exec-5] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:07.784 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 20
 {executed in 2 msec} 
2025-03-26T10:55:07.785 [http-nio-8080-exec-5] INFO j.resultsettable - 
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
|2     |0       |1     |ì±ë³     |gender    |2          |1       |2025-03-20T16:46:02 |[null]   |
|1     |0       |1     |íµì ì¬    |Telecom   |6          |1       |2025-03-20T16:45:56 |[null]   |
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:09.081 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:09.081 [http-nio-8080-exec-4] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:09.084 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:55:09.086 [http-nio-8080-exec-4] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:10.780 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:10.780 [http-nio-8080-exec-3] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:10.783 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 10
 {executed in 1 msec} 
2025-03-26T10:55:10.784 [http-nio-8080-exec-3] INFO j.resultsettable - 
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng   |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
|13    |0       |1     |22     |12          |0          |1       |2025-03-25T23:42:06 |[null]   |
|11    |0       |1     |íì´     |status      |0          |1       |2025-03-25T23:17:10 |[null]   |
|10    |0       |1     |status |status      |2          |1       |2025-03-23T17:08:37 |[null]   |
|9     |0       |1     |ì´ë     |Inning      |40         |1       |2025-03-22T13:33:54 |[null]   |
|8     |0       |1     |êµ­ì      |Nationality |21         |1       |2025-03-22T10:51:18 |[null]   |
|------|--------|------|-------|------------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:13.647 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:13.647 [http-nio-8080-exec-7] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:13.651 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 1 msec} 
2025-03-26T10:55:13.652 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:14.078 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 2 msec} 
2025-03-26T10:55:14.078 [http-nio-8080-exec-10] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:14.080 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 1 msec} 
2025-03-26T10:55:14.081 [http-nio-8080-exec-10] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:14.678 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:14.678 [http-nio-8080-exec-3] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:14.681 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 1 msec} 
2025-03-26T10:55:14.682 [http-nio-8080-exec-3] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:14.996 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:55:14.996 [http-nio-8080-exec-5] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:15.000 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 3 msec} 
2025-03-26T10:55:15.002 [http-nio-8080-exec-5] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:15.395 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:15.395 [http-nio-8080-exec-10] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:15.397 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 0 msec} 
2025-03-26T10:55:15.399 [http-nio-8080-exec-10] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:15.725 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:15.725 [http-nio-8080-exec-2] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:15.728 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 5
 {executed in 2 msec} 
2025-03-26T10:55:15.729 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|19    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:36 |[null]   |
|18    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:33 |[null]   |
|16    |0       |1     |80802rD |hihi      |0          |44      |2025-03-25T23:47:38 |[null]   |
|15    |0       |1     |4545ss  |4545      |0          |454     |2025-03-25T23:43:44 |[null]   |
|14    |0       |1     |55      |55        |0          |55      |2025-03-25T23:43:21 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:55:16.381 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:55:16.381 [http-nio-8080-exec-7] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-26T10:55:16.385 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:55:16.386 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|20    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:47:38 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:36.060 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '24'
 {executed in 0 msec} 
2025-03-26T10:56:36.062 [http-nio-8080-exec-8] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:37.018 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 5 msec} 
2025-03-26T10:56:37.019 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:56:37.020 [http-nio-8080-exec-10] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|25               |
|-----------------|
 
2025-03-26T10:56:37.029 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:56:37.030 [http-nio-8080-exec-1] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|23       |
|---------|
 
2025-03-26T10:56:37.033 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 2 msec} 
2025-03-26T10:56:37.033 [http-nio-8080-exec-1] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:38.739 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '25'
 {executed in 1 msec} 
2025-03-26T10:56:38.740 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:39.787 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 5 msec} 
2025-03-26T10:56:39.788 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:56:39.788 [http-nio-8080-exec-8] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|26               |
|-----------------|
 
2025-03-26T10:56:39.797 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:56:39.798 [http-nio-8080-exec-5] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|24       |
|---------|
 
2025-03-26T10:56:39.800 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:56:39.801 [http-nio-8080-exec-5] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:41.963 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '26'
 {executed in 1 msec} 
2025-03-26T10:56:41.964 [http-nio-8080-exec-9] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:43.708 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. update codegroup set
		cgUse = 1,
		cgName = '80802rD',
		cgNameEng = 'hihi',
		cgOrder = '44'
	where
		cgSeq = '26'
 {executed in 1 msec} 
2025-03-26T10:56:43.720 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:56:43.720 [http-nio-8080-exec-2] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|24       |
|---------|
 
2025-03-26T10:56:43.723 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:56:43.724 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:45.806 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '26'
 {executed in 2 msec} 
2025-03-26T10:56:45.807 [http-nio-8080-exec-6] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:47.090 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. update codegroup set
		cgUse = 1,
		cgName = '80802rD',
		cgNameEng = 'hihi',
		cgOrder = '44'
	where
		cgSeq = '26'
 {executed in 1 msec} 
2025-03-26T10:56:47.102 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:56:47.102 [http-nio-8080-exec-3] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|24       |
|---------|
 
2025-03-26T10:56:47.104 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:56:47.105 [http-nio-8080-exec-3] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:47.893 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '26'
 {executed in 0 msec} 
2025-03-26T10:56:47.894 [http-nio-8080-exec-1] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:48.973 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 6 msec} 
2025-03-26T10:56:48.974 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:56:48.974 [http-nio-8080-exec-10] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|27               |
|-----------------|
 
2025-03-26T10:56:48.983 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:56:48.984 [http-nio-8080-exec-2] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|25       |
|---------|
 
2025-03-26T10:56:48.985 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:56:48.987 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|27    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:48 |[null]   |
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:49.794 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '27'
 {executed in 1 msec} 
2025-03-26T10:56:49.795 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|27    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:48 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:56:51.025 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 5 msec} 
2025-03-26T10:56:51.028 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:56:51.028 [http-nio-8080-exec-4] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|28               |
|-----------------|
 
2025-03-26T10:56:51.036 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:56:51.037 [http-nio-8080-exec-8] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|26       |
|---------|
 
2025-03-26T10:56:51.038 [http-nio-8080-exec-8] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:56:51.040 [http-nio-8080-exec-8] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|28    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:51 |[null]   |
|27    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:48 |[null]   |
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:57:33.591 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '28'
 {executed in 2 msec} 
2025-03-26T10:57:33.592 [http-nio-8080-exec-3] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|28    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:51 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:57:50.522 [http-nio-8080-exec-1] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '28'
 {executed in 2 msec} 
2025-03-26T10:57:50.522 [http-nio-8080-exec-1] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|28    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:51 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:57:52.502 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 5 msec} 
2025-03-26T10:57:52.505 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 0 msec} 
2025-03-26T10:57:52.505 [http-nio-8080-exec-9] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|29               |
|-----------------|
 
2025-03-26T10:57:52.511 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 0 msec} 
2025-03-26T10:57:52.512 [http-nio-8080-exec-10] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|27       |
|---------|
 
2025-03-26T10:57:52.513 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 0 msec} 
2025-03-26T10:57:52.514 [http-nio-8080-exec-10] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|29    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:57:52 |[null]   |
|28    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:51 |[null]   |
|27    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:48 |[null]   |
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:58:11.851 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '29'
 {executed in 1 msec} 
2025-03-26T10:58:11.852 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|29    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:57:52 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:58:13.029 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'80802rD',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 4 msec} 
2025-03-26T10:58:13.030 [http-nio-8080-exec-4] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:58:13.030 [http-nio-8080-exec-4] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|30               |
|-----------------|
 
2025-03-26T10:58:13.040 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-26T10:58:13.041 [http-nio-8080-exec-6] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|28       |
|---------|
 
2025-03-26T10:58:13.042 [http-nio-8080-exec-6] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:58:13.044 [http-nio-8080-exec-6] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|30    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:58:13 |[null]   |
|29    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:57:52 |[null]   |
|28    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:51 |[null]   |
|27    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:48 |[null]   |
|26    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:39 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:58:21.446 [http-nio-8080-exec-7] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '30'
 {executed in 1 msec} 
2025-03-26T10:58:21.448 [http-nio-8080-exec-7] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|30    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:58:13 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:58:26.091 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'121221',
				'hihi',
				'44',
				NOW(),
				0				
			)
 {executed in 4 msec} 
2025-03-26T10:58:26.094 [http-nio-8080-exec-3] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT last_insert_id()
 {executed in 1 msec} 
2025-03-26T10:58:26.094 [http-nio-8080-exec-3] INFO j.resultsettable - 
|-----------------|
|last_insert_id() |
|-----------------|
|31               |
|-----------------|
 
2025-03-26T10:58:26.117 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 4 msec} 
2025-03-26T10:58:26.118 [http-nio-8080-exec-5] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|29       |
|---------|
 
2025-03-26T10:58:26.120 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:58:26.121 [http-nio-8080-exec-5] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|31    |0       |1     |121221  |hihi      |0          |44      |2025-03-26T10:58:26 |[null]   |
|30    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:58:13 |[null]   |
|29    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:57:52 |[null]   |
|28    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:51 |[null]   |
|27    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:48 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:58:58.265 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 2 msec} 
2025-03-26T10:58:58.266 [http-nio-8080-exec-2] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|29       |
|---------|
 
2025-03-26T10:58:58.268 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-26T10:58:58.270 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|31    |0       |1     |121221  |hihi      |0          |44      |2025-03-26T10:58:26 |[null]   |
|30    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:58:13 |[null]   |
|29    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:57:52 |[null]   |
|28    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:51 |[null]   |
|27    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:48 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-26T10:58:59.533 [http-nio-8080-exec-10] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate
				from
				codegroup as a 		
				where 1=1
			AND a.cgSeq = '31'
 {executed in 1 msec} 
2025-03-26T10:58:59.534 [http-nio-8080-exec-10] INFO j.resultsettable - 
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
|31    |0       |1     |121221 |hihi      |0          |44      |2025-03-26T10:58:26 |[null]   |
|------|--------|------|-------|----------|-----------|--------|--------------------|---------|
 
