2025-03-28T01:09:21.836 [http-nio-8080-exec-2] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
			urSeq,
		    urName,
		    urID,
		    urPassword,
		    urRegTime
		FROM
			user
		WHERE 1=1
			AND urID = 'a'
			 AND urPassword = 'a'
 {executed in 4 msec} 
2025-03-28T01:09:21.839 [http-nio-8080-exec-2] INFO j.resultsettable - 
|------|-------|-----|-----------|----------|
|urseq |urname |urid |urpassword |urregtime |
|------|-------|-----|-----------|----------|
|------|-------|-----|-----------|----------|
 
2025-03-28T01:17:05.827 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			FROM
		    code c
		left JOIN codegroup cg ON c.codeGroup_cgSeq = cg.cgSeq
		WHERE
		    1=1

		 AND c.cdUse = 1 
         AND c.cdDelNy = 0
 {executed in 5 msec} 
2025-03-28T01:17:05.828 [http-nio-8080-exec-5] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|95       |
|---------|
 
2025-03-28T01:17:05.833 [http-nio-8080-exec-5] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT

		    c.codeGroup_cgSeq,
		    c.cdUse,
			cg.cgName,
		    c.cdSeq,
		    c.cdName,
		    c.cdNameEng,
		    c.cdOrder,
		    c.cdRegDate,
		    c.cdEdDate,
		    c.cdCheck,
		    c.cdDelNy

			FROM
		    code c
		left JOIN codegroup cg ON c.codeGroup_cgSeq = cg.cgSeq
		WHERE
		    1=1

		 AND c.cdUse = 1 
         AND c.cdDelNy = 0 

		ORDER BY
		    c.cdSeq DESC		    
		limit 5 offset 0
 {executed in 2 msec} 
2025-03-28T01:17:05.836 [http-nio-8080-exec-5] INFO j.resultsettable - 
|----------------|------|-------|------|-------|----------|--------|--------------------|---------|--------|--------|
|codegroup_cgseq |cduse |cgname |cdseq |cdname |cdnameeng |cdorder |cdregdate           |cdeddate |cdcheck |cddelny |
|----------------|------|-------|------|-------|----------|--------|--------------------|---------|--------|--------|
|5               |1     |포지션    |95    |투타겸업   |TWP       |1       |2025-03-23T23:12:21 |[null]   |[null]  |0       |
|10              |1     |status |94    |은퇴     |retire    |1       |2025-03-23T17:13:52 |[null]   |[null]  |0       |
|10              |1     |status |93    |현역     |active    |1       |2025-03-23T17:13:41 |[null]   |[null]  |0       |
|9               |1     |이닝     |92    |20회말   |BOT 20    |1       |2025-03-22T14:12:40 |[null]   |[null]  |0       |
|9               |1     |이닝     |91    |20회초   |TOP 20    |1       |2025-03-22T14:12:16 |[null]   |[null]  |0       |
|----------------|------|-------|------|-------|----------|--------|--------------------|---------|--------|--------|
 
2025-03-28T01:17:18.461 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. Select count(*)

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0
 {executed in 1 msec} 
2025-03-28T01:17:18.462 [http-nio-8080-exec-9] INFO j.resultsettable - 
|---------|
|count(*) |
|---------|
|22       |
|---------|
 
2025-03-28T01:17:18.467 [http-nio-8080-exec-9] DEBUG j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select
			a.cgSeq,
			a.cgdelNy,
			a.cgUse,
		    a.cgName,
		    a.cgNameEng,
		    (select count(aa.cdSeq) from code aa where 1=1 and aa.cdDelNy = 0 and aa.codeGroup_cgSeq = a.cgSeq) as cdSeqCount,
		    a.cgOrder,
		    a.cgRegDate,
		    a.cgEdDate

			from
			codegroup as a 		
			where 1=1
		 AND a.cgUse = 1 
         AND a.cgdelNy = 0 

		order by cgSeq desc
		limit 5 offset 0
 {executed in 1 msec} 
2025-03-28T01:17:18.469 [http-nio-8080-exec-9] INFO j.resultsettable - 
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|cgseq |cgdelny |cguse |cgname  |cgnameeng |cdseqcount |cgorder |cgregdate           |cgeddate |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
|25    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:56:37 |[null]   |
|24    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:54:34 |[null]   |
|23    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:52:51 |[null]   |
|22    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:49:22 |[null]   |
|21    |0       |1     |80802rD |hihi      |0          |44      |2025-03-26T10:48:39 |[null]   |
|------|--------|------|--------|----------|-----------|--------|--------------------|---------|
 
2025-03-28T01:17:22.715 [http-nio-8080-exec-8] ERROR j.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
23. INSERT INTO codegroup (
			cgUse,
		    cgName,
		    cgNameEng,
		    cgOrder,
		    cgRegDate,
		    cgdelNy

			) values (
				1,
				'',
				'',
				'',
				NOW(),
				0				
			)
 {FAILED after 157 msec} 
java.sql.SQLException: Incorrect integer value: '' for column 'cgOrder' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:141)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy3/jdk.proxy3.$Proxy65.insert(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy3/jdk.proxy3.$Proxy66.insert(Unknown Source)
	at com.angels.module.codegroup.CodeGroupService.insert(CodeGroupService.java:24)
	at com.angels.module.codegroup.CodeGroupCo